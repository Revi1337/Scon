#########################################################################

Char -> Binary
	echo -n 'revi1337' | xxd -b -c 1 | cut -d ' ' -f 2

Char -> Octet
	echo -n 'revi1337' | xxd -p -c 1 | awk '{printf("%o ", $1)}' | sed -e 's/.$//g'

Char -> Decimal
	for i in $(echo -n 'revi1337' | fold -w 1 | tr '\n' ' '); do printf "%d\n" \'$i; done
	
Char -> HexaDecimal
	echo -n 'revi1337' | xxd -c 1 | cut -d ' ' -f 2 | awk '{printf "\\x"$i}'




#########################################################################

Binary -> Octet
	for i in $(echo -n '01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111' | sed -e 's/ /\n/g' | xargs -I argv bash -c '{ echo "$((2#argv))"; }' | tr '\n' ' ' | sed -e 's/.$//g'); do echo "$i" | awk '{printf("%c", $0)}'; done | xxd -p -c 1 | awk '{printf("%o ", $1)}' | sed -e 's/.$//g'


Binary -> Decimal
	for i in $(echo -n revi1337 | xxd -b -c 1 | cut -d ' ' -f 2 | tr '\n' ' ' | sed -e '1 s/.$//1g'); do echo 'obase=10; ibase=2;' $i | bc; done


	for i in 01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111; do printf "$((2#$i)) "; done


	echo -n '01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111' | sed -e 's/ /\n/g' | xargs -I argv bash -c '{ echo "$((2#argv))"; }' | tr '\n' ' ' | sed -e 's/.$//g'

Binary -> HexaDecimal
	for i in $(echo -n revi1337 | xxd -b -c 1 | cut -d ' ' -f 2 | tr '\n' ' ' | sed -e 's/.$//g'); do echo 'obase=16; ibase=2;' $i | bc | awk '{print "\\x" $0}'; done  | tr -d '\n'

	for i in 01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111; do echo 'obase=16; ibase=2;' $i | bc | awk '{print "\\x" $0}'; done  | tr -d '\n'	


	for i in 01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111; do echo $((2#$i)) ; done| awk '{printf("%c", $1)}' | xxd -c 1 | cut -d ' ' -f 2 | awk '{print "\\x"$1}' | tr -d '\n'


Binary -> Char
	for i in $(echo -n '01110010 01100101 01110110 01101001 00110001 00110011 00110011 00110111' | sed -e 's/ /\n/g' | xargs -I argv bash -c '{ echo "$((2#argv))"; }' | tr '\n' ' ' | sed -e 's/.$//g'); do echo "$i" | awk '{printf("%c", $0)}'; done

#########################################################################

Octet -> Binary
	echo -n '110 101 114 105 37 41 41 45' | tr ' ' '\n' | xargs -I argv bash -c '{ printf "$((8#argv))"; }' | xxd -r -p | xxd -b -c 1 | cut -d ' ' -f 2 | tr '\n' ' ' | sed -e 's/.$//g'


Octet -> Decimal
	for i in $(echo -n '110 101 114 105 37 41 41 45' | tr ' ' '\n' | xargs -I argv bash -c '{ printf "$((8#argv))"; }' | xxd -r -p | fold -w 1 | tr '\n' ' '); do printf "%d " \'$i; done | sed -e 's/.$//g'


Octet -> HexaDecimal	
	echo -n '110 101 114 105 37 41 41 45' | tr ' ' '\n' | xargs -I argv bash -c '{ echo "$((8#argv))"; }' | awk '{printf("\\x"$1)}'


Octet -> Char
	echo -n '110 101 114 105 37 41 41 45' | tr ' ' '\n' | xargs -I argv bash -c '{ printf "$((8#argv))"; }' | xxd -r -p


#########################################################################

Decimal -> Binary
	echo -n '114 101 118 105 49 51 51 55' | tr ' ' '\n' | awk '{printf("%c", $1)}' | xxd -b -c 1 | cut -d ' ' -f 2 | tr '\n' ' '


Decimal -> Octet
	echo -n '114 101 118 105 49 51 51 55' | tr ' ' '\n' | awk '{printf("%c",$1)}' | xxd -p -c 1 | awk '{printf("%o ", $1)}' | sed -e 's/.$//g'

	echo -n '114 101 118 105 49 51 51 55' | tr ' ' '\n' | awk '{printf("\\x%x\n", $1)}' | sed -e 's/\\x//g' | awk '{printf("%o ", $1)}'


Decimal -> HexaDecimal
	echo -n '114 101 118 105 49 51 51 55' | tr ' ' '\n' | awk '{printf("\\x%x", $1)}'


Decimal -> Char
	echo -n '114 101 118 105 49 51 51 55' | tr ' ' '\n' | awk '{printf("%c",$1)}'
	
#########################################################################

HexaDecimal -> Binary
	echo -n '\x72\x65\x76\x69\x31\x33\x33\x37' | sed -e 's/\\x//g' | xxd -r -p | xxd -b -c 1 | cut -d ' ' -f 2 | tr -d '\n' | fold -w 8 | tr '\n' ' '


HexaDecimal -> Octet
	echo -n '\x72\x65\x76\x69\x31\x33\x33\x37' | sed -e 's/\\x/ /g' | sed -e 's/^.//g' | tr ' ' '\n' | awk '{printf("%o ", $1)}' | sed -e 's/.$//g'


HexaDecimal -> Decimal
	for i in $(echo -n '\x72\x65\x76\x69\x31\x33\x33\x37' | sed -e 's/\\x//g' | xxd -r -p | fold -w 1 | tr '\n' ' '); do printf "%d\n" \'$i; done


HexaDecimal -> Char
	echo -n '\x72\x65\x76\x69\x31\x33\x33\x37' | sed -e 's/\\x//g' | xxd -r -p

	
#########################################################################
13 : base64
14 : base32
#########################################################################
